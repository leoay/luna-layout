// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/LyricTian/gin-admin/v8/internal/app/api"
	"github.com/LyricTian/gin-admin/v8/internal/app/dao/Greet"
	"github.com/LyricTian/gin-admin/v8/internal/app/dao/menu"
	"github.com/LyricTian/gin-admin/v8/internal/app/dao/user"
	"github.com/LyricTian/gin-admin/v8/internal/app/dao/util"
	"github.com/LyricTian/gin-admin/v8/internal/app/module/adapter"
	"github.com/LyricTian/gin-admin/v8/internal/app/router"
	"github.com/LyricTian/gin-admin/v8/internal/app/service"
)

import (
	_ "github.com/LyricTian/gin-admin/v8/internal/app/swagger"
)

// Injectors from wire.go:

func BuildInjector() (*Injector, func(), error) {
	auther, cleanup, err := InitAuth()
	if err != nil {
		return nil, nil, err
	}
	db, cleanup2, err := InitGormDB()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	GreetRepo := &Greet.GreetRepo{
		DB: db,
	}
	GreetMenuRepo := &Greet.GreetMenuRepo{
		DB: db,
	}
	menuActionResourceRepo := &menu.MenuActionResourceRepo{
		DB: db,
	}
	userRepo := &user.UserRepo{
		DB: db,
	}
	userGreetRepo := &user.UserGreetRepo{
		DB: db,
	}
	casbinAdapter := &adapter.CasbinAdapter{
		GreetRepo:        GreetRepo,
		GreetMenuRepo:    GreetMenuRepo,
		MenuResourceRepo: menuActionResourceRepo,
		UserRepo:         userRepo,
		UserGreetRepo:    userGreetRepo,
	}
	syncedEnforcer, cleanup3, err := InitCasbin(casbinAdapter)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	menuRepo := &menu.MenuRepo{
		DB: db,
	}
	menuActionRepo := &menu.MenuActionRepo{
		DB: db,
	}
	loginSrv := &service.LoginSrv{
		Auth:           auther,
		UserRepo:       userRepo,
		UserGreetRepo:  userGreetRepo,
		GreetRepo:      GreetRepo,
		GreetMenuRepo:  GreetMenuRepo,
		MenuRepo:       menuRepo,
		MenuActionRepo: menuActionRepo,
	}
	loginAPI := &api.LoginAPI{
		LoginSrv: loginSrv,
	}
	trans := &util.Trans{
		DB: db,
	}
	menuSrv := &service.MenuSrv{
		TransRepo:              trans,
		MenuRepo:               menuRepo,
		MenuActionRepo:         menuActionRepo,
		MenuActionResourceRepo: menuActionResourceRepo,
	}
	menuAPI := &api.MenuAPI{
		MenuSrv: menuSrv,
	}
	GreetSrv := &service.GreetSrv{
		Enforcer:               syncedEnforcer,
		TransRepo:              trans,
		GreetRepo:              GreetRepo,
		GreetMenuRepo:          GreetMenuRepo,
		UserRepo:               userRepo,
		MenuActionResourceRepo: menuActionResourceRepo,
	}
	GreetAPI := &api.GreetAPI{
		GreetSrv: GreetSrv,
	}
	userSrv := &service.UserSrv{
		Enforcer:      syncedEnforcer,
		TransRepo:     trans,
		UserRepo:      userRepo,
		UserGreetRepo: userGreetRepo,
		GreetRepo:     GreetRepo,
	}
	userAPI := &api.UserAPI{
		UserSrv: userSrv,
	}
	routerRouter := &router.Router{
		Auth:           auther,
		CasbinEnforcer: syncedEnforcer,
		LoginAPI:       loginAPI,
		MenuAPI:        menuAPI,
		GreetAPI:       GreetAPI,
		UserAPI:        userAPI,
	}
	engine := InitGinEngine(routerRouter)
	injector := &Injector{
		Engine:         engine,
		Auth:           auther,
		CasbinEnforcer: syncedEnforcer,
		MenuSrv:        menuSrv,
	}
	return injector, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
